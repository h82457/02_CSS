/* css 파일은 style 태그 내부 작성과 같다 */

h1{ color: rgb(161, 39, 39); }

code{
    background-color: rgb(184, 182, 182);
    font-weight: bold;
    display: block;
}


/* --- 기본 속성 선택자 --- */

/* div 태그 중 name 속성 값이 "name-1" 인 요소에 배경색 green */
div[name="name-1"]{
    background-color: rgb(87, 161, 87);
}

/* div 태그 중 name 속성의 값이 /name-2인 요소만 배경색 yellow */
div[name="name-2"]{
    background-color: rgb(190, 190, 111);

}

/* 모든 div 요소의 글자색을 흰색으로 변경 */
/* div{ color: brown;} */

/* p 태그 중 data 속성의 값이 "data-1"인 요소만 배경색 red */
p[data="data-1"]{
    background-color: rgb(214, 135, 135);
}

/* 내용이 p3, p4 인 요소를 선택해 배경색 blue */
p[data="data-2"]{
    background-color: rgb(118, 118, 252);
}

/* 모든 요소 중 name 속성 값이 "name-1"인 요소 글자 크기 20px */
/* == div1, div2, p2, p3 선택 */

/* *[name="name-1"]{
    font-size:25px
} */


/* 선택자 * 생략 가능 */
/* name 속성 값이 "name-1" 인 요소 모두 선택 */
[name="name-1"]{
    font-size:25px
}

/* --- 자식 선택자 (>) --- */
#parent1 { background-color: skyblue;}

#parent1 > li{
    background-color: rgb(228, 215, 146);
}

/* 자식2, 자식4 의 글자색을 red */
/* 선택자를 연이어 사용 가능 */
#parent1 > li > span{
    color: rgb(202, 69, 69);
}

/*  */
/* --- 후손 선택자 ( ) --- */

/* 아이디가 parent2인 요소의 후손 중 모든 p 태그 선택 */
#parent2 p{
    background-color: rgb(230, 185, 169);
}

#parent2 > div > p{
    text-decoration: underline;
}

/* 후손에 자식이 포함 -> 생략 가능 */
#parent2 div p{
    text-decoration: underline;
}

/*  반응 선택자  */
.test-div{
    border: 3px solid black;
    width: 200px;
    height: 200px;
    background-color: #ddd;
    margin-bottom: 30px;
    /* 마우스 커서를 손가락 모양으로 변경 */
    cursor: pointer;
}

/* #activeBox 가 클릭되고 있을 때 */
#activeBox:active{
    background-color: rgb(180, 180, 126);
}


/* hoverBox 에 마우스가 올라왔을 때 */
#hoverBox:hover{
    background-image: url('../images/cats/cat5.jpg');
    background-size: cover;
  }

  /* --- 상태 선택자 --- */

  /* :focus */
  #input1:focus {

    /* 요소의 기본 테두리 */
    border-color: red;

    /* 초점이 맞춰졌을 때 요소 바깥에 생기는 선 */
    outline-color: greenyellow;
  }
  

  #input1{
    border-color: red;
  }

/* :checked */
  #input2:checked{
    width: 30px;
    height: 30px;
    background-color: red;
    /* radio, checkbox 선택 보이는 표시는 이미지이기 때문에 배경색 적용X */
  }

/* :enabled / :disabled */
.input3:enabled{
    background-color: skyblue;
}
.input3:disabled{
    background-color: lightcoral;
}

/* --- 동위 선택자 --- */

/* + : 바로 뒤 형제요소 하나 */
#div1 + div{
    background-color: rgb(235, 235, 142);
}

/* ~ : 뒤에 존재하는 형제 요소 중 일치하는  모든 형제 요소  */
#div3 ~ div{
    background-color: rgb(158, 238, 198);
}

/* --- 체크박스 만들기 --- */

/* 1. label 요소를 체크박스 모양으로 만들기 */
#check + label{
    width: 30px;
    height: 30px;
    border: 1px solid black;

    /* 크기 지정, 수평 분할 O */
    display: inline-block;
    cursor: pointer;

    border-radius: 20%;
    
  /* 사용자가 선택(블럭)을 못하게 함 */
  user-select: none;
}

/* 2. checkbox 가 체크 되었을 떄 label 에 Checkbox 이미지 표시 */
#check:checked + label{
    background-image: url('../images/checkbox.png');
    background-size: cover;
}

/* 3. checkbox 보이지 않게 처리 */
#check{
    display: none;
}

